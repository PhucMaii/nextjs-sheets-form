generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id              Int      @id @default(autoincrement())
  categoryId      Int
  clientName      String   @db.VarChar(255)
  clientId        String   @unique @db.VarChar(255)
  contactNumber   String   @db.VarChar(11)
  deliveryAddress String   @db.VarChar(255)
  email           String?  @db.VarChar(255)
  password        String   @db.VarChar(255)
  sheetName       String   @db.VarChar(255)
  role            String   @db.VarChar(255)
  category        Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique @db.VarChar(255)
  users User[]
  items Item[]
  forms Form[]
}

model Item {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  categoryId Int
  price      Float
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@index([categoryId])
}

model Form {
  formId     Int      @id @default(autoincrement()) @map("form_id")
  formName   String   @map("form_name") @db.VarChar(255)
  categoryId Int
  inputs     Input[]
  Category   Category @relation(fields: [categoryId], references: [id])

  @@index([categoryId])
}

model Input {
  inputId   Int    @id @default(autoincrement()) @map("input_id")
  inputName String @map("input_name") @db.VarChar(255)
  inputType String @map("input_type") @db.VarChar(10)
  formId    Int
  form      Form   @relation(fields: [formId], references: [formId], onDelete: Cascade)

  @@index([formId])
}

model OrderedItems {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(255)
  price    Float
  orderId  Int
  quantity Int

  Orders Orders? @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Orders {
  id              Int               @id @default(autoincrement())
  orderTime       String
  deliveryDate    String
  note            String
  status          String
  userId          Int
  totalPrice      Float
  items           OrderedItems[]
  OrderPreference OrderPreference[] // Should remove
}

model OrderPreference {
  id          Int     @id @default(autoincrement())
  isAutoPrint Boolean
  orderId     Int

  order Orders @relation(fields: [orderId], references: [id], onDelete: Cascade)
}
